/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tft_garits.GUI;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import tft_garits.Documents.InvoicePrinter;
import tft_garits.Documents.Printer;

/**
 *
 * @author George Kemp
 */
public class JobListForm extends Form {
    
    boolean hideComplete = false;
    boolean showUnallocated = false;
    Object[][] data;
    /**
     * Creates new form CustomerForm
     */
    public JobListForm(GUI gui) {
        super(gui);
        initComponents();
        
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        unallocatedCheck = new javax.swing.JCheckBox();
        printButton = new javax.swing.JButton();
        printAllButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        inProgressButton = new javax.swing.JButton();
        completeButton = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        hideCompleteCheck = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Job List");

        unallocatedCheck.setText("Show Unallocated");
        unallocatedCheck.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                unallocatedCheckStateChanged(evt);
            }
        });
        unallocatedCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unallocatedCheckActionPerformed(evt);
            }
        });

        printButton.setText("Print Invoice");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        printAllButton.setText("Print All");

        saveButton.setText("Save");

        inProgressButton.setText("In Progress");
        inProgressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inProgressButtonActionPerformed(evt);
            }
        });

        completeButton.setText("Complete");
        completeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeButtonActionPerformed(evt);
            }
        });

        jButton12.setText("Remove");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Job Number", "Vehicle Reg", "Mechanic ID", "Mechanic Name", "Job Status", "Payment Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setColumnSelectionAllowed(true);
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(table);
        table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(5).setResizable(false);
        }

        hideCompleteCheck.setText("Hide Complete");
        hideCompleteCheck.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hideCompleteCheckStateChanged(evt);
            }
        });
        hideCompleteCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideCompleteCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(256, 256, 256)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(hideCompleteCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(unallocatedCheck))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(printButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(printAllButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(saveButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(inProgressButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(completeButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton12))))
                        .addGap(0, 14, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hideCompleteCheck)
                    .addComponent(unallocatedCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printButton)
                    .addComponent(printAllButton)
                    .addComponent(saveButton)
                    .addComponent(inProgressButton)
                    .addComponent(completeButton)
                    .addComponent(jButton12))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        gui.run("MAINMENU");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void hideCompleteCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideCompleteCheckActionPerformed
        //nothing
    }//GEN-LAST:event_hideCompleteCheckActionPerformed

    private void unallocatedCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unallocatedCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unallocatedCheckActionPerformed

    private void hideCompleteCheckStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hideCompleteCheckStateChanged
        hideComplete = !hideComplete;
        updateTable();
    }//GEN-LAST:event_hideCompleteCheckStateChanged

    private void unallocatedCheckStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_unallocatedCheckStateChanged
        showUnallocated = !showUnallocated;
        updateTable();
    }//GEN-LAST:event_unallocatedCheckStateChanged

    private void inProgressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inProgressButtonActionPerformed
        int[] rows = table.getSelectedRows();
        for (int i : rows){
            int job_no = (int) data[i][0];
            gui.databaseHandler.executeStatement("UPDATE job SET status = 'In Progress' WHERE job_no=" + job_no);
        }
        
        updateTable();
    }//GEN-LAST:event_inProgressButtonActionPerformed

    private void completeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeButtonActionPerformed
        int[] rows = table.getSelectedRows();
        for (int i : rows){
            int job_no = (int) data[i][0];
            gui.databaseHandler.completeJob(job_no);
        }
        
        updateTable();
    }//GEN-LAST:event_completeButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        int[] rows = table.getSelectedRows();
        for (int i : rows){
            int job_no = (int) data[i][0];
            if (data[i][4].equals("Complete")){
                Object[] details = gui.databaseHandler.getInvoiceDetails(job_no);
                if (details[8] != null) {
                    Printer printer = new InvoicePrinter(details);
                    printer.print();
                    gui.databaseHandler.executeStatement("UPDATE job SET reminder_state = 1, invoice_date = CURRENT_DATE WHERE job_no=" + job_no);
                    gui.throwErrorForm("Printed invoice " + job_no + ".");
                } else {
                    gui.throwErrorForm("Invoice must have a mechanic.");
                }
            } else {
                gui.throwErrorForm("Job must be completed.");
            }
        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void updateTable(){
        //job_no int, vehicle_reg string, mech id int, mech name string, job status
        String[] columns = {"Job Number", "Vehicle Registration", "Mechanic ID", "Mechanic Name", "Job Status", "Payment Status"};
                
        //get data for each job
        String condition1 = hideComplete ? "status != 'Complete'": "TRUE";
        String condition2 = showUnallocated ? " AND job.staff_no IS NULL" : " AND TRUE";
        data = gui.databaseHandler.getJobDetails(condition1, condition2);
        
        DefaultTableModel dataModel = new DefaultTableModel(data, columns);
        table.setDefaultEditor(Object.class, null);
        table.setModel(dataModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton completeButton;
    private javax.swing.JCheckBox hideCompleteCheck;
    private javax.swing.JButton inProgressButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton printAllButton;
    private javax.swing.JButton printButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable table;
    private javax.swing.JCheckBox unallocatedCheck;
    // End of variables declaration//GEN-END:variables
}
